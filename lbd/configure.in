#
# transcontroller OpenSource project.
#
# Configuration template file for transcontroller.
# autoconf will generate & check deps for proper compilation
#
# Copyright (C) 2001-2009 Alexandre Cassen, <acassen@linux-vs.org>

dnl ----[ Process this file with autoconf to produce a configure script ]----
AC_INIT(transcontroller/core/main.c)
VERSION=`cat VERSION`
VERSION_DATE=`date +%m/%d,20%y`
OUTPUT_TARGET="Makefile transcontroller/core/Makefile transcontroller/Makefile lib/Makefile lib/config.h"

dnl ----[ Checks for programs ]----
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_TOOL(STRIP,strip)

dnl ----[ transcontroller specific configure options ]----
AC_ARG_WITH(kernel-dir,
  [  --with-kernel-dir=DIR   path to linux kernel source directory],
  [kernelinc="$withval/include" kernelpath="$withval"],
  [kernelinc="/usr/src/linux/include" kernelpath="/usr/src/linux"])
AC_ARG_WITH(kernel-version,
  [  --with-kernel-version=VER forced value for linux kernel version (VER=2.4|2.6)],
  [kernelversion="$withval"], [kernelversion=""])
AC_ARG_ENABLE(debug,
  [  --enable-debug          compile with debugging flags])

dnl ----[ Checks for header files ]----
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h syslog.h unistd.h sys/ioctl.h sys/time.h)
dnl [do we really need this ?] AC_CHECK_HEADERS(linux/netlink.h linux/rtnetlink.h)

dnl ----[ Checks for libraries ]----
AC_CHECK_LIB(nl-3, nl_socket_alloc,
  [
    AC_CHECK_LIB(nl-genl-3, genl_connect,
      [
        USE_NL="LIBIPVS_USE_NL"
        CFLAGS="$CFLAGS $(pkg-config --cflags libnl-genl-3.0)"
	LIBS="$LIBS $(pkg-config --libs libnl-genl-3.0)"
      ],
      [
        AC_MSG_ERROR([libnl-3 is installed but not libnl-gen-3. Please, install libnl-gen-3.])
      ])
  ],
  [
    AC_CHECK_LIB(nl, nl_socket_modify_cb,
      [
        USE_NL="LIBIPVS_USE_NL"
        CFLAGS="$CFLAGS -DFALLBACK_LIBNL1"
        LIBS="$LIBS $(pkg-config --libs libnl-1)"
      ],
      [                                                                                           
        USE_NL="LIBIPVS_DONTUSE_NL"
        AC_MSG_WARN([transcontroller will be built without libnl support.])
      ])
  ])




dnl ----[ Checks for LVS and VRRP support ]----
IPVS_SUPPORT="_WITHOUT_LVS_"
if test "$enable_lvs" != "no"; then
  if test "$KERN" = "_KRNL_2_6_"; then
    IPVS_SUPPORT="_WITH_LVS_"
  else
    AC_CHECK_HEADER([net/ip_vs.h],
      [IPVS_SUPPORT="_WITH_LVS_"],
      [
        IPVS_SUPPORT="_WITHOUT_LVS_"
        AC_MSG_WARN([transcontroller will be built without LVS support.])
      ])
  fi
fi  


dnl ----[ IPVS syncd support probe ]---
IPVS_SYNCD="_WITHOUT_IPVS_SYNCD_"
if test "$IPVS_SUPPORT" = "_WITH_LVS_"; then
  AC_MSG_CHECKING([for IPVS syncd support])
  if test "$KERN" = "_KRNL_2_6_"; then
    IPVS_SYNCD="_HAVE_IPVS_SYNCD_"
  elif test "_KRNL_2_4_"; then
    IPVS_SYNCD="_HAVE_IPVS_SYNCD_"
  else
    IPVS_SYNCD="_WITHOUT_IPVS_SYNCD_"
  fi

  if test "${IPVS_SUPPORT}" = "_WITHOUT_LVS_" -o "$enable_lvs_syncd" = "no"; then
    IPVS_SYNCD="_WITHOUT_IPVS_SYNCD_"
  fi

  if test "$IPVS_SYNCD" = "_HAVE_IPVS_SYNCD_"; then
    AC_MSG_RESULT([yes])
  else
    AC_MSG_RESULT([no])
  fi
fi

AC_SUBST(IPVS_SYNCD)



dnl ----[ Debug or not ? ]----
if test "${enable_debug}" = "yes"; then
  DFLAGS="-D_DEBUG_"
  AC_SUBST(DFLAGS)
fi

dnl ----[ Profiling or not ? ]----
if test "${enable_profile}" = "yes"; then
  CFLAGS="$CFLAGS -pg"
fi

AC_SUBST(VERSION)
AC_SUBST(VERSION_DATE)
AC_SUBST(IPVS_SUPPORT)
AC_SUBST(USE_NL)
AC_SUBST(VRRP_SUPPORT)

dnl ----[ Checks for typedefs, structures, and compiler characteristics ]----
AC_C_CONST
AC_TYPE_PID_T
AC_HEADER_TIME

dnl ----[ Checks for library functions ]----
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(gettimeofday select socket strerror strtol uname)


AC_OUTPUT($OUTPUT_TARGET)

dnl ----[ Display current configuration ]----
cat <<EOF;

transcontroller configuration
------------------------
transcontroller version       : ${VERSION}
Compiler                 : ${CC}
Compiler flags           : ${CFLAGS}
EOF

dnl ----[ display optional vars  ]----
if test -n "$LIBS"; then
  echo "Extra Lib                : $LIBS"
fi

if test "${IPVS_SUPPORT}" = "_WITH_LVS_"; then
  echo "Use IPVS Framework       : Yes"
  if test "${IPVS_SYNCD}" = "_HAVE_IPVS_SYNCD_"; then
    echo "IPVS sync daemon support : Yes"
  elif test "${IPVS_SYNCD}" = "_WITHOUT_IPVS_SYNCD_"; then
    echo "IPVS sync daemon support : No"
  fi
  if test "${USE_NL}" = "LIBIPVS_USE_NL"; then
    echo "IPVS use libnl           : Yes"
  else
    echo "IPVS use libnl           : No"
  fi
else
  echo "Use IPVS Framework       : No"
  echo "IPVS sync daemon support : No"
fi

if test "${VRRP_SUPPORT}" = "_WITH_VRRP_"; then
  echo "Use VRRP Framework       : Yes"
  if test "${VRRP_VMAC}" = "_HAVE_VRRP_VMAC_"; then
    echo "Use VRRP VMAC            : Yes"
  else
    echo "Use VRRP VMAC            : No"
  fi
else
  echo "Use VRRP Framework       : No"
fi
if test "${SNMP_SUPPORT}" = "_WITH_SNMP_"; then
  echo "SNMP support             : Yes"
else
  echo "SNMP support             : No"
fi
if test "${SHA1_SUPPORT}" = "_WITH_SHA1_"; then
  echo "SHA1 support             : Yes"
else
  echo "SHA1 support             : No"
fi
if test "${DFLAGS}" = "-D_DEBUG_"; then
  echo "Use Debug flags          : Yes"
else
  echo "Use Debug flags          : No"
fi
dnl ----[ end configure ]---
